{"version":3,"file":"/Users/aleksieva89/trivia/typescript/src/game.ts","sources":["/Users/aleksieva89/trivia/typescript/src/game.ts"],"names":[],"mappings":"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","sourcesContent":["export class Game {\n  private players: Array<string> = [];\n  private places: Array<number> = [];\n  private purses: Array<number> = [];\n  private inPenaltyBox: Array<boolean> = [];\n  private currentPlayer: number = 0;\n  private isGettingOutOfPenaltyBox: boolean = false;\n\n  private popQuestions: Array<string> = [];\n  private scienceQuestions: Array<string> = [];\n  private sportsQuestions: Array<string> = [];\n  private rockQuestions: Array<string> = [];\n\n  constructor() {\n    for (let i = 0; i < 50; i++) {\n      this.popQuestions.push(\"Pop Question \" + i);\n      this.scienceQuestions.push(\"Science Question \" + i);\n      this.sportsQuestions.push(\"Sports Question \" + i);\n      this.rockQuestions.push(this.createRockQuestion(i));\n    }\n  }\n\n  public add(name: string): boolean {\n    this.players.push(name);\n    this.places[this.howManyPlayers() - 1] = 0;\n    this.purses[this.howManyPlayers() - 1] = 0;\n    this.inPenaltyBox[this.howManyPlayers() - 1] = false;\n\n    console.log(name + \" was added\");\n    console.log(\"They are player number \" + this.players.length);\n\n    return true;\n  }\n\n  public roll(roll: number) {\n    console.log(this.players[this.currentPlayer] + \" is the current player\");\n    console.log(\"They have rolled a \" + roll);\n\n    if (this.inPenaltyBox[this.currentPlayer]) {\n      if (roll % 2 != 0) {\n        this.isGettingOutOfPenaltyBox = true;\n\n        console.log(\n          this.players[this.currentPlayer] +\n            \" is getting out of the penalty box\"\n        );\n        this.places[this.currentPlayer] =\n          this.places[this.currentPlayer] + roll;\n        if (this.places[this.currentPlayer] > 11) {\n          this.places[this.currentPlayer] =\n            this.places[this.currentPlayer] - 12;\n        }\n\n        console.log(\n          this.players[this.currentPlayer] +\n            \"'s new location is \" +\n            this.places[this.currentPlayer]\n        );\n        console.log(\"The category is \" + this.currentCategory());\n        this.askQuestion();\n      } else {\n        console.log(\n          this.players[this.currentPlayer] +\n            \" is not getting out of the penalty box\"\n        );\n        this.isGettingOutOfPenaltyBox = false;\n      }\n    } else {\n      this.places[this.currentPlayer] = this.places[this.currentPlayer] + roll;\n      if (this.places[this.currentPlayer] > 11) {\n        this.places[this.currentPlayer] = this.places[this.currentPlayer] - 12;\n      }\n\n      console.log(\n        this.players[this.currentPlayer] +\n          \"'s new location is \" +\n          this.places[this.currentPlayer]\n      );\n      console.log(\"The category is \" + this.currentCategory());\n      this.askQuestion();\n    }\n  }\n\n  public wrongAnswer(): boolean {\n    console.log(\"Question was incorrectly answered\");\n    console.log(\n      this.players[this.currentPlayer] + \" was sent to the penalty box\"\n    );\n    this.inPenaltyBox[this.currentPlayer] = true;\n\n    this.currentPlayer += 1;\n    if (this.currentPlayer == this.players.length) this.currentPlayer = 0;\n    return true;\n  }\n\n  public wasCorrectlyAnswered(): boolean {\n    if (this.inPenaltyBox[this.currentPlayer]) {\n      if (this.isGettingOutOfPenaltyBox) {\n        console.log(\"Answer was correct!!!!\");\n        this.purses[this.currentPlayer] += 1;\n        console.log(\n          this.players[this.currentPlayer] +\n            \" now has \" +\n            this.purses[this.currentPlayer] +\n            \" Gold Coins.\"\n        );\n\n        var winner = this.didPlayerWin();\n        this.currentPlayer += 1;\n        if (this.currentPlayer == this.players.length) this.currentPlayer = 0;\n\n        return winner;\n      } else {\n        this.currentPlayer += 1;\n        if (this.currentPlayer == this.players.length) this.currentPlayer = 0;\n        return true;\n      }\n    } else {\n      console.log(\"Answer was correct!!!!\");\n\n      this.purses[this.currentPlayer] += 1;\n      console.log(\n        this.players[this.currentPlayer] +\n          \" now has \" +\n          this.purses[this.currentPlayer] +\n          \" Gold Coins.\"\n      );\n\n      var winner = this.didPlayerWin();\n\n      this.currentPlayer += 1;\n      if (this.currentPlayer == this.players.length) this.currentPlayer = 0;\n\n      return winner;\n    }\n  }\n\n  private askQuestion(): void {\n    if (this.currentCategory() == \"Pop\") console.log(this.popQuestions.shift());\n    if (this.currentCategory() == \"Science\")\n      console.log(this.scienceQuestions.shift());\n    if (this.currentCategory() == \"Sports\")\n      console.log(this.sportsQuestions.shift());\n    if (this.currentCategory() == \"Rock\")\n      console.log(this.rockQuestions.shift());\n  }\n\n  private createRockQuestion(index: number): string {\n    return \"Rock Question \" + index;\n  }\n\n  private currentCategory(): string {\n    if (this.places[this.currentPlayer] == 0) return \"Pop\";\n    if (this.places[this.currentPlayer] == 4) return \"Pop\";\n    if (this.places[this.currentPlayer] == 8) return \"Pop\";\n    if (this.places[this.currentPlayer] == 1) return \"Science\";\n    if (this.places[this.currentPlayer] == 5) return \"Science\";\n    if (this.places[this.currentPlayer] == 9) return \"Science\";\n    if (this.places[this.currentPlayer] == 2) return \"Sports\";\n    if (this.places[this.currentPlayer] == 6) return \"Sports\";\n    if (this.places[this.currentPlayer] == 10) return \"Sports\";\n    return \"Rock\";\n  }\n\n  private didPlayerWin(): boolean {\n    return !(this.purses[this.currentPlayer] == 6);\n  }\n\n  private howManyPlayers(): number {\n    return this.players.length;\n  }\n}\n"]}